$marker: "Permanent Marker", cursive;
$handwriting: "Nothing You Could Do", cursive;

@mixin graph-paper-background($colour: "blue") {
    background-image: url("../images/graph-paper-#{$colour}.png");
    // background-repeat: repeat;
    // background-position-x: center;
    // background-size: units-to-size(1) auto;
}

@function units-to-size($units) {
    @return Min(calc(100vw * #{$units} / 9), calc(112px * #{$units})); // Unit size ideally 1/9 of screen width, but must be >= 73px and <= 112px
}

// Used below break point
// Lowers min number of units in width to 8
@function min-units-to-size($units) {
    @return calc(13vw * #{$units});
    // @return calc(12.5vw * #{$units});
}

$arrow-height: units-to-size(0.9);
$arrow-width: calc(#{$arrow-height} / 2);

$min-arrow-height : min-units-to-size(0.9);
$min-arrow-width: calc(#{$min-arrow-height} / 2);

.graph-paper {
    background-repeat: repeat;
    background-position-x: center;
    background-size: units-to-size(1) auto;
}

body {
    background-color: white;
    overflow-x: hidden;
    width: 100%;
}

header, section {
    width: 100%;
}

header {
    @include graph-paper-background("blue");
    position: relative;

    .contents {
        padding: units-to-size(0.5) units-to-size(1);
    }

    h1 {
        font-family: $marker;
        text-align: center;
        font-size: units-to-size(0.82);
        margin: 0;
        margin-bottom: units-to-size(0.3);
    }

    #gravity-image {
        width: units-to-size(7);
        margin: auto;
    }

    p {
        font-family: $handwriting;
        text-align: center;
        font-size: Max(21px, units-to-size(0.315));
        font-weight: bold;
        margin: units-to-size(0.2);
    }

    a {
        display: block;
        margin: auto;
        text-align: center;

        img {
            width: units-to-size(2);
            min-width: 120px; // Min height of 'Download on the App Store' image is 40px according to their guidelines - thus min-width = 120px as width/height ratio is about 3
            height: auto;
        }
    }
}

// Arrow image width x height = 5vw x 10vw
.arrows {
    height: calc(100% + #{$arrow-height});
    width: 100%;
    position: absolute;
    background-image: url("../images/arrow-mutable.svg");
    background-repeat: repeat;
    background-position-x: center;
    background-size: $arrow-width;
    z-index: -10;
    animation: arrow-down 0.9s linear 0s infinite normal;
}

.arrows-fixed {
    @extend .arrows;
    height: 100%;
    width: calc(100% + #{$arrow-height});
    background-position-x: 0%;
    background-position-y: center;
    background-size: auto $arrow-width;
    animation-name: arrow-right;
    background-image: url("../images/arrow-fixed.svg");
}

@keyframes arrow-down {
    from {
        transform: translateY(calc(-1 * #{$arrow-height}));
    }

    to {
        transform: translateY(0);
    }
}

@keyframes arrow-right {
    from {
        transform: translateX(calc(-1 * #{$arrow-height}));
    }

    to {
        transform: translateX(0);
    }
}

#fixed-field {
    background-color: rgb(185, 185, 185);
    height: units-to-size(1.3); //.1 units above and below orb, allow .1 for boundaries
    position: relative;
    z-index: 0;
    overflow-x: hidden;

    .boundary:last-child {
        bottom: 0;
    }

    .orb {
        height: units-to-size(1);
        width: units-to-size(1);
        position: absolute;
        top: units-to-size(0.15);
        animation: orb-left-to-right 2s ease-in 0s infinite normal;

        .orb-image {
            width: 100%;
            height: 100%;
            background-image: url("../images/orbs/red-orb-grey.svg");
            background-size: cover;
            animation: orb-colour-change 10s step-end 0s infinite normal;
        }
    }

    @keyframes orb-left-to-right {
        from {
            // left: calc(-101vw/9);
            transform: translateX(units-to-size(-1.01));
        }

        to {
            // left: calc(100vw + 101vw/9);
            transform: translateX(calc(100vw + #{units-to-size(1.01)}));
        }
    }

    @keyframes orb-colour-change {
        0% {
            background-image: url("../images/orbs/red-orb-grey.svg");
        }

        20% {
            background-image: url("../images/orbs/blue-orb-grey.svg");
        }

        40% {
            background-image: url("../images/orbs/green-orb-grey.svg");
        }

        60% {
            background-image: url("../images/orbs/orange-orb-grey.svg");
        }

        80% {
            background-image: url("../images/orbs/purple-orb-grey.svg");
        }
    }
}

.boundary {
    background-image: url("../images/boundary.svg");
    background-repeat: repeat-x;
    background-size: auto units-to-size(0.05);
    position: absolute;
    width: 100%;
    height: units-to-size(0.05);
}

h2 {
    font-family: $marker;
    font-size: Max(30px, units-to-size(0.45)); // No need to duplicate in media query due to max function
    text-align: center;
    margin-top: 0;
}

a, p {
    font-family: $handwriting;
    text-align: center;
    font-size: Max(15px, units-to-size(0.225));
}

h3 {
    font-family: $marker;
    font-size: Max(20px, units-to-size(0.3));
    margin-top: 0;
}

section .container {
    padding: units-to-size(0.5) units-to-size(1);
    text-align: center;
}

section#about {
    @include graph-paper-background("green");
    
    p:last-of-type {
        font-size: Max(23px, units-to-size(0.35));
    }

    .footer-orbs {
        height: units-to-size(1);
        background-image: url("../images/footer-orbs.svg");
        background-repeat: repeat-x;
        background-size: auto units-to-size(1);
        background-position-x: center;
    }
}

footer {

    background-image: url("../images/footer-blocks.png");
    background-position-x: center;
    background-repeat: repeat;
    // background-size: units-to-size(4); // Image is 400x200px so 4 blocks wide
    background-size: units-to-size(5.5);
    color: white;
    
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    // padding: units-to-size(0.3);

    div {
        margin: units-to-size(0.4);
        text-align: center;
    }

    h3 {
        font-family: $handwriting;
        margin-bottom: 5px;
    }

    a, p {
        font-family: $marker;
    }

    a {
        font-size: Max(14px, units-to-size(0.22));
        color: white;
        text-decoration: underline;
    }

    a:hover, a:focus {
        text-decoration: none;
    }

    .copyright {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    small {
        font-family: $handwriting;
        font-size: Max(14px, units-to-size(0.22));
        
    }

    .before-apostrophe {
        letter-spacing: 2px;
    }
}

// Set all units-per-size calls to use min-units-per-size
// Changes min number of units in width from 9 to 8
@media only screen and (max-width: 650px) {
    .graph-paper {
        background-size: min-units-to-size(1) auto;
    }

    header {

        .contents {
            padding: min-units-to-size(0.35);// min-units-to-size(0.5);
        }
    
        h1 {
            font-size: min-units-to-size(0.82);
            margin-bottom: min-units-to-size(0.3);
        }
    
        #gravity-image {
            width: min-units-to-size(7);
        }
    
        p {
            // font-size: min-units-to-size(0.315);
            margin: min-units-to-size(0.2);
        }
    
        a {    
            img {
                width: min-units-to-size(2);
            }
        }
    }

    .arrows {
        height: calc(100% + #{$min-arrow-height});
        background-size: $min-arrow-width;
        animation-name: min-arrow-down;
    }
    
    .arrows-fixed {
        height: 100%;
        width: calc(100% + #{$min-arrow-height});
        background-size: auto $min-arrow-width;
        animation-name: min-arrow-right;
    }
    
    @keyframes min-arrow-down {
        from {
            transform: translateY(calc(-1 * #{$min-arrow-height}));
        }
    
        to {
            transform: translateY(0);
        }
    }
    
    @keyframes min-arrow-right {
        from {
            transform: translateX(calc(-1 * #{$min-arrow-height}));
        }
    
        to {
            transform: translateX(0);
        }
    }

    #fixed-field {
        height: min-units-to-size(1.3); //.1 units above and below orb, allow .1 for boundaries
    
        .orb {
            height: min-units-to-size(1);
            width: min-units-to-size(1);
            top: min-units-to-size(0.15);
            animation-name: min-orb-left-to-right;
        }
    
        @keyframes min-orb-left-to-right {
            from {
                transform: translateX(min-units-to-size(-1.01));
            }
    
            to {
                transform: translateX(calc(100vw + #{min-units-to-size(1.01)}));
            }
        }
    }

    .boundary {
        background-size: auto min-units-to-size(0.05);
        height: min-units-to-size(0.05);
    }
    
    // h2 {
    //     font-size: min-units-to-size(0.45);
    // }
    
    // a, p {

    //     font-size: min-units-to-size(0.225);
    // }
    
    // h3 {
    //     font-size: min-units-to-size(0.3);
    // }
    
    section .container {
        padding: min-units-to-size(0.5) min-units-to-size(1);
    }
    
    section#about {
        // p:last-of-type {
        //     font-size: min-units-to-size(0.35);
        // }
    
        .footer-orbs {
            height: min-units-to-size(1);
            background-size: auto min-units-to-size(1);
        }
    }

    footer {
        background-size: min-units-to-size(5.5);

        div {
            margin: min-units-to-size(0.4);
        }
    
        // a {
        //     font-size: min-units-to-size(0.22);
        // }
    
        // small {
        //     font-size: min-units-to-size(0.22);
            
        // }
    }
}

/*
Colours:

Arrow in mutable: 153, 153, 153, 31
Arrow in fixed: 200, 200, 200, 255
*/